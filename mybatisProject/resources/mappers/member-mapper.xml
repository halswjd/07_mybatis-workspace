<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	<!-- namespace : 해당 mapper 파일의 고유한 별칭 -->
	
	<!-- 
	
		* DML문 일 경우
		<insert|update|delete id="각sql문 식별자" [parameterType="전달받을 자바타입(풀클래스명)|별칭"]>
			
		</insert|update|delete>
		// DML문 같은 경우 실행결과는 처리된 행수(int)이기 때문에 resultMap에 대한 속성 필요 없음
		
		
		* SELECT문 일 경우 
		<select id="각 sql문 식별자" [parameterType="전달받을 자바타입(풀클래스명)|별칭"] resultType="조회결과를 반환하고자하는 자바타입" | resultMap="조회결과를 뽑아서 매핑할 resultMap">
			
		</select>
		// SELECT문 일 경우 조회되는 결과 타입이 int, String, Member객체 등 다양하기때문에 resultType, resultMap 속성을 가짐
		
		? 대신에 sql문에 전달된 객체로부터 값을 꺼낼때 #{필드명 또는 변수명 또는 키값} 이용
		
	 -->
	 
	 <!-- 
	 	* resultMap 마이바티스의 핵심 기능 중 하나!
	 	  ResultSet으로 부터 조회된 컬럼값 하나씩 뽑아서 내가 지정한 vo객체 각 필드에 담는(매핑) 역할 수행
	 	  => JDBC 코드를 줄여주는 역할 수행
	 	  
	 	  <resultMap id="식별자" type="조회결과를 담아서 반환하고자하는 vo객체의 타입(풀클래스명)|별칭">
	 	  	<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
	 	  	<result column="조회결과를 뽑고자하는 DB컬럼명" property="해당 결과를 담고자 하는 필드명" />
	 	  	...
	 	  </resultMap>
	 	  
	  -->
	  
	 <resultMap type="Member" id="memberResultSet"> <!-- 테이블명ResultSet -->
	 	<result column="user_no" property="userNo"/>
	 	<result column="user_id" property="userId"/>
	 	<result column="user_pwd" property="userPwd"/>
	 	<result column="user_name" property="userName"/>
	 	<result column="email" property="email"/>
	 	<result column="birthday" property="birthday"/>
	 	<result column="gender" property="gender"/>
	 	<result column="phone" property="phone"/>
	 	<result column="address" property="address"/>
	 	<result column="enroll_date" property="enrollDate"/>
	 	<result column="modify_date" property="modifyDate"/>
	 	<result column="status" property="status"/>
	 </resultMap>
	  
	 
	 <select id="loginMember" resultMap="memberResultSet" parameterType="Member">
		 select
		       user_no
		     , user_id
		     , user_pwd
		     , user_name
		     , email
		     , birthday
		     , gender
		     , phone
		     , address
		     , enroll_date
		     , modify_date
		     , status
		  from member
		 where user_id = #{ userId }
		   and user_pwd = #{ userPwd }
		   and status = 'Y'
	 </select>
	 
	 <!-- <insert id="insertMember" parameterType="com.kh.mybatis.member.model.vo.Member"> -->
	 <!-- package를 적는데 너무 길다 -> mybatis.config.xml에서 Aliases를 이용해 풀클래스명에 별칭을 부여할 수 있음 -->
	 <insert id="insertMember" parameterType="Member">
		 insert
		  into member
		  (
		    user_no
		  , user_id
		  , user_pwd
		  , user_name
		  , email
		  , birthday
		  , gender
		  , phone
		  , address
		  )
		  values
		  (
		    seq_uno.nextval
		    <!-- Member 객체의 필드명으로 ? 채우기 -->
		  , #{userId}
		  , #{userPwd}
		  , #{userName}
		  , #{email}
		  , #{birthday}
		  , #{gender}
		  , #{phone}
		  , #{address}
		  )
	 </insert>
	 
</mapper>